{"version":3,"file":"svelte-device-info.js","sources":["../src/svelte-device-info.ts"],"sourcesContent":["//----------------------------------------------------------------------------//\n//                             Svelte Device Info                             //\n//----------------------------------------------------------------------------//\n\n  const memoized:any = {}\n\n/**** DeviceIsMobile ****/\n// see https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n\n  function DeviceIsMobile ():boolean {\n    let Result = false\n// @ts-ignore don't care about literal indexing\n      ;(function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) Result = true})(navigator.userAgent||navigator.vendor||window['opera'])\n    return Result\n  }\n\n/**** DeviceIsPhone ****/\n// see https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n\n  function DeviceIsPhone ():boolean {\n    if (DeviceIsMobile()) {\n      let ViewportWidth  = window.innerWidth\n      let ViewportHeight = window.innerHeight\n\n      let smallerEdgeSize = Math.min(ViewportWidth,ViewportHeight)\n      let largerEdgeSize  = Math.max(ViewportWidth,ViewportHeight)\n\n      return (smallerEdgeSize <= 480) && (largerEdgeSize <= 896)\n    } else {\n      return false\n    }\n  }\n\n/**** DeviceCanHover (is set together with \"DevicePointingAccuracy\") ****/\n\n  function DeviceCanHover ():boolean {\n    if (memoized.DevicePointingAccuracy == null) {\n      updateDevicePointingAccuracy()\n\n      if (! DocumentIsReady() && ! memoized.waitingForLoaded) {\n        memoized.waitingForLoaded = true\n        window.addEventListener('DOMContentLoaded', updateDevicePointingAccuracy)\n                // after document is loaded, classes will be applied as foreseen\n      }\n    }\n    return memoized.DeviceCanHover                  // may change while running!\n  }\n\n/**** DevicePointingAccuracy ****/\n// Internet Explorer and MS/Edge are NOT supported\n\n  function MediaQuery (Query:string):boolean {\n    let MediaMatcher:any = (\n      window.matchMedia ||\n// @ts-ignore\n      window['webkitMatchmedia'] || window['mozMatchmedia'] || window['oMatchmedia']\n    )\n\n    return (MediaMatcher != null) && MediaMatcher(Query).matches\n  }\n\n  function DocumentIsReady ():boolean {\n    return (\n      (document.readyState === 'interactive') ||\n      (document.readyState === 'complete')\n    )\n  }\n\n/**** touch device without support for \"pointer:coarse\"? ****/\n\n  function AppRunsOnLegacyTouchDevice ():boolean {\n    if (memoized.AppRunsOnLegacyTouchDevice == null) {\n      memoized.AppRunsOnLegacyTouchDevice = (\n        ! MediaQuery('(pointer:fine)') &&\n        ! MediaQuery('(pointer:coarse)') && ! MediaQuery('-moz-touch-enabled') &&\n        (\n          ('ontouchstart' in Window) || ((navigator.maxTouchPoints || 0) > 0) ||\n          (/touch|android|iphone|ipod|ipad/i).test(navigator.userAgent)\n        )\n      )\n    }\n\n    return memoized.AppRunsOnLegacyTouchDevice\n  }\n\n/**** rewrite media query rules for legacy browsers on touch devices ****/\n\n  function ListElement (List:any, Index:number):any {\n    return (\n      typeof List.item === 'function' ? List.item(Index) : List[Index]\n    )\n  }\n\n  function ListHasElementMatching (List:any, Pattern:RegExp):boolean {\n    for (let i = 0, l = List.length; i < l; i++) {\n      if (Pattern.test(ListElement(List,i))) { return true }\n    }\n    return false\n  }\n\n  function rewriteMediaQueriesOnLegacyTouchDevices ():void {\n    if (memoized.MediaQueriesHaveBeenRewritten) { return }\n\n    if (AppRunsOnLegacyTouchDevice()) {\n      if (DocumentIsReady()) {\n        let Stylesheets = document.styleSheets            // reference, not copy\n        for (let i = 0, l = Stylesheets.length; i < l; i++) {\n          let Rules = Stylesheets[i]['cssRules'] || Stylesheets[i]['rules']\n          for (let j = 0, k = Rules.length; j < k; j++) {\n            let Rule:CSSRule = Rules[j]\n            if (Rule.type === CSSRule.MEDIA_RULE) {\n              if (ListHasElementMatching((Rule as CSSMediaRule).media, /handheld/i)) {\n                let Media = (Rule as CSSMediaRule).media  // reference, not copy\n                Media.mediaText = Media.mediaText.replace('handheld', 'screen')\n              }\n            }\n          }\n        }\n\n      /**** rewrite media-dependent links for legacy browsers ****/\n\n        let Links = document.getElementsByTagName('link')\n        for (let i = 0, l = Links.length; i < l; i++) {\n          let Link = Links[i]\n          if ((/handheld/i).test(Link.media)) {\n            Link.media = Link.media.replace('handheld', 'screen')\n          }\n        }\n\n        memoized.MediaQueriesHaveBeenRewritten = true\n      } else {\n        window.addEventListener('DOMContentLoaded', rewriteMediaQueriesOnLegacyTouchDevices)\n      }\n    }\n  }\n\n/**** determine presence and accuracy of primary pointing device ****/\n\n  type PointingAccuracy = 'none' | 'fine' | 'coarse'\n\n  function DevicePointingAccuracy ():PointingAccuracy {\n    if (memoized.DevicePointingAccuracy == null) {\n      updateDevicePointingAccuracy()\n\n      if (! DocumentIsReady() && ! memoized.waitingForLoaded) {\n        memoized.waitingForLoaded = true\n        window.addEventListener('DOMContentLoaded', updateDevicePointingAccuracy)\n                // after document is loaded, classes will be applied as foreseen\n      }\n    }\n    return memoized.DevicePointingAccuracy          // may change while running!\n  }\n\n/**** updateDevicePointingAccuracy ****/\n\n  function updateDevicePointingAccuracy ():void {\n    memoized.DeviceCanHover = MediaQuery('(hover:hover)')\n\n    let updatedPointingAccuracy:PointingAccuracy = 'fine'\n    switch (true) {\n      case MediaQuery('(pointer:none)'):     updatedPointingAccuracy = 'none';   break\n      case MediaQuery('(pointer:coarse)'):\n      case MediaQuery('-moz-touch-enabled'):\n      case AppRunsOnLegacyTouchDevice():     updatedPointingAccuracy = 'coarse'; break\n    }\n    memoized.DevicePointingAccuracy = updatedPointingAccuracy\n\n    if (DocumentIsReady()) {\n      let ClassList = document.body.classList             // reference, not copy\n      if (\n        ((updatedPointingAccuracy === 'none')   !== ClassList.contains('noPointer'))   ||\n        ((updatedPointingAccuracy === 'fine')   !== ClassList.contains('finePointer')) ||\n        ((updatedPointingAccuracy === 'coarse') !== ClassList.contains('coarsePointer'))\n      ) {\n        document.body.classList.remove('noPointer','finePointer','coarsePointer')\n        switch (updatedPointingAccuracy) {\n          case 'none':   document.body.classList.add('noPointer');     break\n          case 'fine':   document.body.classList.add('finePointer');   break\n          case 'coarse': document.body.classList.add('coarsePointer'); break\n        }\n      }\n    }\n  }\n\n/**** Event Handler Registry ****/\n\n  type EventHandlerRecord = { Handler:Function, onceOnly:boolean }\n\n/**** registerHandler ****/\n\n  function registerHandler (Handler:Function, onceOnly:boolean):void {\n    if (typeof Handler !== 'function') {\n      throw new Error('handler function expected')\n    }\n\n    if (memoized.EventHandlerRegistry == null) {\n      memoized.EventHandlerRegistry = []\n    }\n    let EventHandlerRegistry = memoized.EventHandlerRegistry  // ref., not copy!\n\n    for (let i = 0, l = EventHandlerRegistry.length; i < l; i++) {\n      if (EventHandlerRegistry[i].Handler === Handler) {\n        EventHandlerRegistry[i].onceOnly = onceOnly\n        return\n      }\n    }\n\n    EventHandlerRegistry.push({ Handler, onceOnly })\n\n    if (EventHandlerRegistry.length === 1) {\n      observePointingAccuracy()\n    }\n  }\n\n/**** unregisterHandler ****/\n\n  function unregisterHandler (Handler:Function):void {\n    if (memoized.EventHandlerRegistry == null) {\n      memoized.EventHandlerRegistry = []\n    }\n    let EventHandlerRegistry = memoized.EventHandlerRegistry  // ref., not copy!\n\n    for (let i = 0, l = EventHandlerRegistry.length; i < l; i++) {\n      if (EventHandlerRegistry[i].Handler === Handler) {\n        EventHandlerRegistry.splice(i,1)\n        break\n      }\n    }\n\n    if (EventHandlerRegistry.length === 0) {\n      unobservePointingAccuracy()\n    }\n  }\n\n/**** onPointingAccuracyChanged ****/\n\n  function onPointingAccuracyChanged (Handler:Function):void {\n    registerHandler(Handler,false)\n  }\n\n/**** oncePointingAccuracyChanged ****/\n\n  function oncePointingAccuracyChanged (Handler:Function):void {\n    registerHandler(Handler,true)\n  }\n\n/**** offPointingAccuracyChanged ****/\n\n  function offPointingAccuracyChanged (Handler:Function):void {\n    unregisterHandler(Handler)\n  }\n\n/**** observePointingAccuracy (e.g., on \"convertibles\") ****/\n\n  function observePointingAccuracy ():void {\n    memoized.AccuracyPoller = setInterval(() => {\n      let oldPointingAccuracy = DevicePointingAccuracy()\n        updateDevicePointingAccuracy()\n      if (DevicePointingAccuracy() !== oldPointingAccuracy) {\n        invokeRegisteredHandlers()\n      }\n    },500)\n  }\n\n/**** unobservePointingAccuracy ****/\n\n  function unobservePointingAccuracy ():void {\n    clearInterval(memoized.AccuracyPoller)\n    memoized.AccuracyPoller = undefined\n  }\n\n/**** invokeRegisteredHandlers ****/\n\n  function invokeRegisteredHandlers ():void {\n    if (memoized.EventHandlerRegistry == null) {\n      memoized.EventHandlerRegistry = []\n    }\n    let EventHandlerRegistry = memoized.EventHandlerRegistry  // ref., not copy!\n\n    for (let i = 0, l = EventHandlerRegistry.length; i < l; i++) {\n      let { Handler, onceOnly } = EventHandlerRegistry[i]\n\n      try {\n        Handler(DevicePointingAccuracy())\n      } catch (Signal) {\n        console.warn('PointingAccuracy observation function failed with',Signal)\n      }\n\n      if (onceOnly) { unregisterHandler(Handler) } // a bit inefficient, but DRY\n    }\n  }\n\n  export default {\n    get isMobile () { return DeviceIsMobile() },\n    get isPhone ()  { return DeviceIsPhone() },\n    get isTablet () { return DeviceIsMobile() && ! DeviceIsPhone() },\n\n    get isLegacyTouchDevice () { return AppRunsOnLegacyTouchDevice() },\n    rewriteMediaQueriesOnLegacyTouchDevices,\n\n    get PointingAccuracy () { return DevicePointingAccuracy() },\n    get canHover ()         { return DeviceCanHover() },\n\n    onPointingAccuracyChanged,\n    oncePointingAccuracyChanged,\n    offPointingAccuracyChanged,\n\n    get observesPointingAccuracy () { return (memoized.AccuracyPoller != null) }\n  }\n\n"],"names":["memoized","DeviceIsMobile","a","Result","navigator","userAgent","vendor","window","test","substr","DeviceIsPhone","ViewportWidth","innerWidth","ViewportHeight","innerHeight","smallerEdgeSize","Math","min","largerEdgeSize","max","MediaQuery","Query","MediaMatcher","matchMedia","matches","DocumentIsReady","document","readyState","AppRunsOnLegacyTouchDevice","Window","maxTouchPoints","ListElement","List","Index","item","ListHasElementMatching","Pattern","i","l","length","DevicePointingAccuracy","updateDevicePointingAccuracy","waitingForLoaded","addEventListener","DeviceCanHover","updatedPointingAccuracy","ClassList","body","classList","contains","remove","add","registerHandler","Handler","onceOnly","Error","EventHandlerRegistry","push","AccuracyPoller","setInterval","oldPointingAccuracy","_a","Signal","console","warn","unregisterHandler","invokeRegisteredHandlers","splice","clearInterval","undefined","isMobile","isPhone","isTablet","isLegacyTouchDevice","rewriteMediaQueriesOnLegacyTouchDevices","MediaQueriesHaveBeenRewritten","Stylesheets","styleSheets","Rules","j","k","Rule","type","CSSRule","MEDIA_RULE","media","Media","mediaText","replace","Links","getElementsByTagName","Link","PointingAccuracy","canHover","onPointingAccuracyChanged","oncePointingAccuracyChanged","offPointingAccuracyChanged","observesPointingAccuracy"],"mappings":"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"}